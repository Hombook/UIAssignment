basePath: /
definitions:
  db.Pagination:
    description: JSON response body to hold paginated data
    properties:
      limit:
        description: Max number of items per page(5 <= limit <= 100)
        type: integer
      page:
        description: Requested page
        type: integer
      rows:
        description: |-
          Content of data
          example: [{"account": "ac1", "fullName": "mister man"}, {"account": "ac2", "fullName": "miss lady"}]
      totalPages:
        description: Total number of pages by the given limit
        type: integer
      totalRows:
        description: Total number of the matched item
        type: integer
    type: object
  handlers.CommonResponse:
    description: A single element JSON for returning a human readable message.
    properties:
      message:
        description: Human readable message
        type: string
    type: object
  handlers.createAccessTokenRequest:
    properties:
      account:
        description: |-
          User account
          example: myAccount100
          required: true
        type: string
      password:
        description: |-
          Password of the given account
          example: my@pass100Word
          required: true
        type: string
    type: object
  handlers.createAccessTokenResponse:
    properties:
      AccessToken:
        description: Access token
        type: string
      ExpiresAt:
        description: Unix timestamp of when the token expires
        type: integer
    type: object
  handlers.createUserRequest:
    description: JSON request body for creating user
    properties:
      account:
        description: User account, alphanumeric only
        type: string
      fullName:
        description: 'User''s full name(Length: min=1, max=50)'
        maxLength: 50
        minLength: 1
        type: string
      password:
        description: 'Password, alphanumeric only(Length: min=6, max=40)'
        maxLength: 40
        minLength: 6
        type: string
    required:
    - account
    - fullName
    - password
    type: object
  handlers.updateUserRequest:
    description: JSON request body for updating user
    properties:
      fullName:
        description: 'User''s full name(Length: min=1, max=50)'
        maxLength: 50
        minLength: 1
        type: string
      password:
        description: 'Password, alphanumeric only(Length: min=6, max=40)'
        maxLength: 40
        minLength: 6
        type: string
    type: object
  models.Users:
    description: Full user data
    properties:
      account:
        description: User account
        type: string
      createdAt:
        description: The time when the account was created
        type: string
      fullName:
        description: User's full name
        type: string
      password:
        description: User's password, hashed
        type: string
      updatedAt:
        description: The time when the account was last updated
        type: string
    type: object
info:
  contact: {}
  description: uiassignment REST service
  title: uiassignment REST API
  version: v1
paths:
  /health:
    get:
      description: Check if server is healthy
      produces:
      - application/json
      responses:
        "200":
          description: '''alive'''
          schema:
            $ref: '#/definitions/handlers.CommonResponse'
      tags:
      - health
  /v1/accessToken:
    post:
      description: Create user access token
      parameters:
      - description: User login credentials
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.createAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.createAccessTokenResponse'
        "400":
          description: Invalid user account credentials
        "500":
          description: Internal error caused by DB connection issue or JSON parsing
            failure
      tags:
      - accessToken
  /v1/users:
    get:
      description: Get a list of user accounts and names with paging
      parameters:
      - description: Access token
        in: header
        name: X-Accesstoken
        required: true
        type: string
      - description: Filter by user's full name
        in: query
        name: fullName
        type: string
      - description: Max items per page(min=5, max=100, default=5)
        in: query
        name: limit
        type: integer
      - description: Requested page
        in: query
        name: page
        type: integer
      - description: 'Select attribute to sort the list(acct: account, fullname: full
          name)'
        in: query
        name: orderBy
        type: string
      - description: 'Sort order(asc: ascending, desc: descending )'
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Pagination'
        "400":
          description: Invalid query parameter
          schema:
            $ref: '#/definitions/handlers.CommonResponse'
        "401":
          description: Missing valid acces token for accessing this resource
        "500":
          description: Internal error caused by DB connection issue or JSON parsing
            failure
      tags:
      - user
    post:
      description: Create user
      parameters:
      - description: Data for creating the user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created
        "400":
          description: Invalid request body or duplicated account
          schema:
            $ref: '#/definitions/handlers.CommonResponse'
        "500":
          description: Internal error caused by DB connection issue or JSON parsing
            failure
      tags:
      - user
  /v1/users/{account}:
    delete:
      description: Delete user by the given account
      parameters:
      - description: Access token
        in: header
        name: X-Accesstoken
        required: true
        type: string
      - description: User account
        in: path
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted the user
        "401":
          description: Missing valid acces token for accessing this resource
        "403":
          description: Current token owner has no right to access this resource
        "500":
          description: Internal error caused by DB connection issue
      tags:
      - user
    get:
      description: Get user details by the selected account
      parameters:
      - description: Access token
        in: header
        name: X-Accesstoken
        required: true
        type: string
      - description: User account
        in: path
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "401":
          description: Missing valid acces token for accessing this resource
        "404":
          description: Account doesn't exist
        "500":
          description: Internal error caused by DB connection issue or JSON parsing
            failure
      tags:
      - user
    patch:
      description: Update selected account's user data
      parameters:
      - description: Access token
        in: header
        name: X-Accesstoken
        required: true
        type: string
      - description: User account
        in: path
        name: account
        required: true
        type: string
      - description: Data for updating the user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/handlers.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the user
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/handlers.CommonResponse'
        "401":
          description: Missing valid acces token for accessing this resource
        "403":
          description: Current token owner has no right to access this resource
        "500":
          description: Internal error caused by DB connection issue
      tags:
      - user
schemes:
- http
swagger: "2.0"
tags:
- name: uiassignment.
